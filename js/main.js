!function(g){var I={};function c(n){if(I[n])return I[n].exports;var i=I[n]={i:n,l:!1,exports:{}};return g[n].call(i.exports,i,i.exports,c),i.l=!0,i.exports}c.m=g,c.c=I,c.d=function(g,I,n){c.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:n})},c.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},c.t=function(g,I){if(1&I&&(g=c(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var n=Object.create(null);if(c.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var i in g)c.d(n,i,function(I){return g[I]}.bind(null,i));return n},c.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return c.d(I,"a",I),I},c.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},c.p="",c(c.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\nif ("serviceWorker" in navigator) {\r\n  window.addEventListener("load", function () {\r\n    navigator.serviceWorker.register("serviceworker.js").then(\r\n      function (registration) {\r\n        console.log(\r\n          "ServiceWorker registration successful with scope: ",\r\n          registration.scope\r\n        );\r\n      },\r\n      function (err) {\r\n        console.log("ServiceWorker registration failed: ", err);\r\n      }\r\n    );\r\n  });\r\n}\r\nconsole.log(`it works`);\r\n\r\nconst ASTEROIDNUMBER = 10;\r\nconst ASTEROIDSIZE = 100;\r\nconst ASTEROIDSPEED = 50;\r\nconst ASTEROIDVERT = 10;\r\nconst ASTEROIDJAGGENDESS = 0.5;\r\nconst BLINK = 0.1;\r\nconst FPS = 30;\r\nconst INVISIBILITY = 3;\r\nconst LASER_MAX = 100;\r\nconst LASER_SPEED = 500;\r\nconst SHIPSIZE = 30;\r\nconst TURNSPEED = 270;\r\nconst SHIPFORWARD = 5;\r\nconst SHIPEXPLODEDURATION = 1;\r\n\r\nlet pause = false;\r\nlet canvas = document.getElementById("gameCanvas");\r\nlet ctx = canvas.getContext("2d");\r\nlet hue = 0;\r\nlet asteroids = [];\r\nlet ship = newShip();\r\n\r\nfunction START() {\r\n  window.setInterval(() => {\r\n    if (!pause) {\r\n      UPDATE();\r\n    }\r\n  }, 30);\r\n}\r\nSTART();\r\ncreateAsteroids();\r\n\r\ndocument.addEventListener("keydown", keyDown);\r\ndocument.addEventListener("keyup", keyUp);\r\n\r\nfunction keyDown(e) {\r\n  hue = hue + 10;\r\n  switch (e.keyCode) {\r\n    case 32:\r\n      shootLaser();\r\n      break;\r\n    case 37:\r\n      ship.rotate = ((TURNSPEED / 180) * Math.PI) / FPS;\r\n      break;\r\n    case 38:\r\n      ship.moveForward = true;\r\n      break;\r\n    case 39:\r\n      ship.rotate = ((-TURNSPEED / 180) * Math.PI) / FPS;\r\n      break;\r\n    case 40:\r\n      ship.moveReturn = true;\r\n      break;\r\n    case 80:\r\n      pause = !pause;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction keyUp(e) {\r\n  switch (e.keyCode) {\r\n    case 32:\r\n      ship.canShoot = true;\r\n      break;\r\n    case 37:\r\n      ship.rotate = 0;\r\n      break;\r\n    case 38:\r\n      ship.moveForward = false;\r\n      break;\r\n    case 39:\r\n      ship.rotate = 0;\r\n      break;\r\n    case 40:\r\n      ship.moveReturn = false;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction createAsteroids() {\r\n  asteroids = [];\r\n  let x, y;\r\n  for (let i = 0; i < ASTEROIDNUMBER; i++) {\r\n    do {\r\n      x = Math.floor(Math.random() * canvas.width);\r\n      y = Math.floor(Math.random() * canvas.height);\r\n    } while (safetyBuffer(ship.x, ship.y, x, y) < ASTEROIDSIZE * 2);\r\n    asteroids.push(newAsteroid(x, y));\r\n  }\r\n}\r\nfunction newShip() {\r\n  return {\r\n    x: Math.floor(Math.random() * canvas.width),\r\n    y: Math.floor(Math.random() * canvas.height),\r\n    r: SHIPSIZE / 2,\r\n    a: Math.PI / 2,\r\n    blinkNum: 30,\r\n    blinkTime: 3,\r\n    canShoot: true,\r\n    exploadingTime: 0,\r\n    forward: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    lasers: [],\r\n    moveForward: false,\r\n    moveReturn: false,\r\n    motion: 0.7,\r\n    rotate: 0,\r\n  };\r\n}\r\n\r\nfunction newAsteroid(x, y) {\r\n  let asteroid = {\r\n    x: x,\r\n    y: y,\r\n    vertically: Math.random() * 10 + ASTEROIDVERT / 2,\r\n    xv: (Math.random() * ASTEROIDSPEED) / FPS < 0.5 ? 1 : -1,\r\n    yv: (Math.random() * ASTEROIDSPEED) / FPS < 0.5 ? 1 : -1,\r\n    r: Math.floor((Math.random() * ASTEROIDSIZE) / 4),\r\n    a: Math.PI * 2,\r\n    jaggedness: [],\r\n  };\r\n  for (let i = 0; i < ASTEROIDVERT; i++) {\r\n    asteroid.jaggedness.push(\r\n      Math.random() * ASTEROIDJAGGENDESS * 2 + 1 - ASTEROIDJAGGENDESS\r\n    );\r\n  }\r\n  return asteroid;\r\n}\r\n\r\nfunction safetyBuffer(x1, y1, x2, y2) {\r\n  let distansBetweenPoints = Math.sqrt(\r\n    Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)\r\n  );\r\n  return distansBetweenPoints;\r\n}\r\n\r\nfunction explodeShip() {\r\n  ship.exploadingTime = Math.floor(SHIPEXPLODEDURATION * FPS);\r\n}\r\n\r\nfunction shootLaser() {\r\n  if (ship.canShoot && ship.lasers.length < LASER_MAX) {\r\n    ship.lasers.push({\r\n      x: ship.x + (4 / 3) * ship.r * Math.cos(ship.a),\r\n      y: ship.y - (4 / 3) * ship.r * Math.sin(ship.a),\r\n      xv: (LASER_SPEED * Math.cos(ship.a)) / 50,\r\n      yv: -(LASER_SPEED * Math.sin(ship.a)) / 50,\r\n    });\r\n  }\r\n  ship.canShoot = false;\r\n}\r\n\r\nfunction UPDATE() {\r\n  let blinkingOn = ship.blinkNum % INVISIBILITY === 0;\r\n  let exploding = ship.exploadingTime > 0;\r\n\r\n  // Draw Space\r\n  ctx.fillStyle = "black";\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // Draw the ship\r\n  if (!exploding) {\r\n    if (blinkingOn) {\r\n      ctx.strokeStyle = "white";\r\n      ctx.lineWidth = SHIPSIZE / 15;\r\n      ctx.beginPath();\r\n      ctx.moveTo(\r\n        ship.x + (4 / 3) * ship.r * Math.cos(ship.a),\r\n        ship.y - (4 / 3) * ship.r * Math.sin(ship.a)\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) + Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) - Math.cos(ship.a))\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) - Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) + Math.cos(ship.a))\r\n      );\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Blinking On\r\n    if (ship.blinkNum > 0) {\r\n      ship.blinkTime--;\r\n      if (ship.blinkTime === 0) {\r\n        ship.blinkTime = Math.floor(BLINK * FPS);\r\n        ship.blinkNum--;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Explode ship\r\n  else {\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 1, 7, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "red";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 1.4, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "orange";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 1.1, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "yellow";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 0.8, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "white";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 0.5, Math.PI * 2, false);\r\n    ctx.fill();\r\n  }\r\n\r\n  // Move forward in space\r\n  if (ship.moveForward) {\r\n    ship.forward.x += (SHIPFORWARD * Math.cos(ship.a)) / 10;\r\n    ship.forward.y += (SHIPFORWARD * Math.sin(ship.a)) / 10;\r\n\r\n    // Draw Turbo Buster\r\n    if (!exploding && blinkingOn) {\r\n      ctx.fillStyle = `hsl(${hue}, 100%, 50%)`;\r\n      ctx.strokeStyle = "yellow";\r\n      ctx.lineWidth = SHIPSIZE / 15;\r\n      ctx.beginPath();\r\n      ctx.moveTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) + 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) - 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * 2 * Math.cos(ship.a),\r\n        ship.y + ship.r * 2 * Math.sin(ship.a)\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) - 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) + 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Move return in space\r\n  } else if (ship.moveReturn && blinkingOn) {\r\n    ship.forward.y -= (SHIPFORWARD * Math.sin(ship.a)) / 20;\r\n    ship.forward.x -= (SHIPFORWARD * Math.cos(ship.a)) / 20;\r\n\r\n    // Draw buster in return\r\n    if (!exploding) {\r\n      ctx.fillStyle = `hsl(${hue}, 100%, 50%)`;\r\n      ctx.strokeStyle = "yellow";\r\n      ctx.lineWidth = SHIPSIZE / 15;\r\n      ctx.beginPath();\r\n      ctx.moveTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) + 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) - 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * Math.cos(ship.a),\r\n        ship.y + ship.r * Math.sin(ship.a)\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) - 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) + 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n  } else {\r\n    ship.forward.x -= (ship.motion * ship.forward.x) / 5;\r\n    ship.forward.y -= (ship.motion * ship.forward.y) / 5;\r\n  }\r\n\r\n  // Draw Laser\r\n  for (let i = 0; i < ship.lasers.length; i++) {\r\n    ctx.fillStyle = "magenta";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      ship.lasers[i].x,\r\n      ship.lasers[i].y,\r\n      SHIPSIZE / 2,\r\n      Math.PI * 2,\r\n      0,\r\n      true\r\n    );\r\n    ctx.fill();\r\n  }\r\n  for (let i = 0; i < ship.lasers.length; i++) {\r\n    ship.lasers[i].x += ship.lasers[i].xv;\r\n    ship.lasers[i].y += ship.lasers[i].yv;\r\n    // if (ship.lasers[i].x < 0) {\r\n    //   ship.lasers[i].x = canvas.width;\r\n    // } else if (ship.lasers[i].x > canvas.width) {\r\n    //   ship.lasers[i].x = 0;\r\n    // }\r\n    // if (ship.lasers[i].y < 0) {\r\n    //   ship.lasers[i].y = canvas.height;\r\n    // } else if (ship.lasers[i].y > canvas.height) {\r\n    //   ship.lasers[i].y = 0;\r\n    // }\r\n  }\r\n\r\n  // Detect laser hits on asteroids\r\n  let asteroid_x, asteroid_y, asteroid_r, laser_x, laser_y;\r\n  for (let i = asteroids.length - 1; i >= 0; i--) {\r\n    asteroid_x = asteroids[i].x;\r\n    asteroid_y = asteroids[i].y;\r\n    asteroid_r = asteroids[i].r;\r\n\r\n    for (let j = ship.lasers.length - 1; j >= 0; j--) {\r\n      laser_x = ship.lasers[j].x;\r\n      laser_y = ship.lasers[j].y;\r\n\r\n      if (safetyBuffer(asteroid_x, asteroid_y, laser_x, laser_y) < asteroid_r) {\r\n        ship.lasers.splice(j, 1);\r\n        asteroids.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Draw asteriods\r\n  let x, y, r, a, vert, jaggedness;\r\n  for (let i = 0; i < asteroids.length; i++) {\r\n    ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`;\r\n    ctx.lineWidth = SHIPSIZE / 20;\r\n    x = asteroids[i].x;\r\n    y = asteroids[i].y;\r\n    a = asteroids[i].a;\r\n    r = asteroids[i].r;\r\n    vert = asteroids[i].vertically;\r\n    jaggedness = asteroids[i].jaggedness;\r\n    ctx.beginPath();\r\n    ctx.moveTo(\r\n      x + r * jaggedness[0] * Math.cos(a),\r\n      y + r * jaggedness[0] * Math.sin(a)\r\n    );\r\n    for (let j = 1; j < vert; j++) {\r\n      ctx.lineTo(\r\n        x + r * jaggedness[j] * Math.cos(a + (j * Math.PI * 2) / vert),\r\n        y + r * jaggedness[j] * Math.sin(a + (j * Math.PI * 2) / vert)\r\n      );\r\n    }\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  }\r\n\r\n  // Check for collision\r\n  if (!exploding) {\r\n    if (ship.blinkNum === 0) {\r\n      for (let i = 0; i < asteroids.length; i++) {\r\n        if (\r\n          safetyBuffer(ship.x, ship.y, asteroids[i].x, asteroids[i].y) <=\r\n          ship.r + asteroids[i].r\r\n        ) {\r\n          explodeShip();\r\n        }\r\n      }\r\n    }\r\n\r\n    // Rotate Ship\r\n    ship.a = ship.a + ship.rotate;\r\n\r\n    // Motion Ship\r\n    ship.x = ship.x + ship.forward.x;\r\n    ship.y = ship.y - ship.forward.y;\r\n  } else {\r\n    ship.exploadingTime--;\r\n    if (ship.exploadingTime === 0) {\r\n      ship = newShip();\r\n    }\r\n  }\r\n\r\n  // Edge of screen\r\n  if (ship.x < 0 - ship.r) {\r\n    ship.x = canvas.width + ship.r;\r\n  } else if (ship.x > canvas.width + ship.r) {\r\n    ship.x = 0 - ship.r;\r\n  }\r\n  if (ship.y < 0 - ship.r) {\r\n    ship.y = canvas.height + ship.r;\r\n  } else if (ship.y > canvas.height + ship.r) {\r\n    ship.y = 0 - ship.r;\r\n  }\r\n\r\n  // Move the asteroids\r\n  for (let i = 0; i < asteroids.length; i++) {\r\n    asteroids[i].x = asteroids[i].x + asteroids[i].xv / 2;\r\n    asteroids[i].y = asteroids[i].y + asteroids[i].yv * 2;\r\n\r\n    // Edge of screen asteroids\r\n    if (asteroids[i].x < 0 - asteroids[i].r) {\r\n      asteroids[i].x = canvas.width + asteroids[i].r;\r\n    } else if (asteroids[i].x > canvas.width + asteroids[i].r) {\r\n      asteroids[i].x = 0 - asteroids[i].r;\r\n    }\r\n    if (asteroids[i].y < 0 - asteroids[i].r) {\r\n      asteroids[i].y = canvas.height + asteroids[i].r;\r\n    } else if (asteroids[i].y > canvas.height + asteroids[i].r) {\r\n      asteroids[i].y = 0 - asteroids[i].r;\r\n    }\r\n  }\r\n}\r\n\r\n// function handleKey(event) {\r\n//   console.log(event.keyCode);\r\n// }\r\n// window.addEventListener("keydown", handleKey);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);