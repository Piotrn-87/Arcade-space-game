!function(c){var g={};function I(n){if(g[n])return g[n].exports;var r=g[n]={i:n,l:!1,exports:{}};return c[n].call(r.exports,r,r.exports,I),r.l=!0,r.exports}I.m=c,I.c=g,I.d=function(c,g,n){I.o(c,g)||Object.defineProperty(c,g,{enumerable:!0,get:n})},I.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},I.t=function(c,g){if(1&g&&(c=I(c)),8&g)return c;if(4&g&&"object"==typeof c&&c&&c.__esModule)return c;var n=Object.create(null);if(I.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:c}),2&g&&"string"!=typeof c)for(var r in c)I.d(n,r,function(g){return c[g]}.bind(null,r));return n},I.n=function(c){var g=c&&c.__esModule?function(){return c.default}:function(){return c};return I.d(g,"a",g),g},I.o=function(c,g){return Object.prototype.hasOwnProperty.call(c,g)},I.p="",I(I.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\nif ("serviceWorker" in navigator) {\r\n  window.addEventListener("load", function () {\r\n    navigator.serviceWorker.register("serviceworker.js").then(\r\n      function (registration) {\r\n        console.log(\r\n          "ServiceWorker registration successful with scope: ",\r\n          registration.scope\r\n        );\r\n      },\r\n      function (err) {\r\n        console.log("ServiceWorker registration failed: ", err);\r\n      }\r\n    );\r\n  });\r\n}\r\nconsole.log(`it works`);\r\n\r\nconst ASTEROID_NUMBER = 2;\r\nconst ASTEROID_SIZE = 50;\r\nconst ASTEROID_SPEED = 40;\r\nconst ASTEROID_VERT = 10;\r\nconst ASTEROID_JAGGENDESS = 0.5;\r\nconst BLINK = 0.1;\r\nconst FPS = 30;\r\nconst GAME_LIVE = 3;\r\nconst INVISIBILITY = 3;\r\nconst LASER_MAX = 120;\r\nconst LASER_SPEED = 500;\r\nconst POINTS_FOR_LARGE_ASTEROID = 10;\r\nconst POINTS_FOR_SMALL_ASTEROID = 20;\r\nconst SHIP_SIZE = 30;\r\nconst SHIP_FORWARD = 5;\r\nconst SHIP_EXPLODEDURATION = 1;\r\nconst TURN_SPEED = 270;\r\nconst TEXT_FADE_TIME = 3;\r\n\r\nlet asteroids = [];\r\nlet canvas = document.getElementById("gameCanvas");\r\nlet ctx = canvas.getContext("2d");\r\nlet hue = 0;\r\nlet level;\r\nlet lives = 3;\r\nlet livesColour;\r\nlet pause = false;\r\nlet ship;\r\nlet text;\r\nlet textAlpha;\r\nlet score;\r\n\r\nlet shoot = new soundEffect("assets/sounds/Shoot.wav", 0.4, 10);\r\nlet crushing = new soundEffect("assets/sounds/Crushing.wav", 1.0, 5);\r\nlet shipReturn = new soundEffect("assets/sounds/Rocket_Thrusters.wav");\r\nlet shipBlowingUp = new soundEffect("assets/sounds/Ship_Explosion.wav");\r\nlet rocketThruster = new soundEffect("assets/sounds/Return.wav");\r\n\r\nfunction soundEffect(src, soundVolume = 1.0, maxSeries = 1) {\r\n  let shootSeries = this.shootSeries;\r\n  let streams = this.streams;\r\n  shootSeries = 1;\r\n  streams = [];\r\n  for (let i = 0; i <= maxSeries; i++) {\r\n    streams.push(new Audio(src));\r\n    streams[i].volume = soundVolume;\r\n  }\r\n  this.play = function () {\r\n    shootSeries = (shootSeries + 1) % maxSeries;\r\n    streams[shootSeries].play();\r\n  };\r\n  this.stop = function () {\r\n    streams[shootSeries].pause();\r\n    streams[shootSeries].currentTime = 0;\r\n  };\r\n}\r\n\r\nnewGame();\r\n\r\nfunction StartStop() {\r\n  window.setInterval(() => {\r\n    if (!pause) {\r\n      UPDATE();\r\n    }\r\n  }, 30);\r\n}\r\nStartStop();\r\n\r\ndocument.addEventListener("keydown", keyDown);\r\ndocument.addEventListener("keyup", keyUp);\r\n\r\nfunction keyDown(e) {\r\n  if (ship.dead) {\r\n    return;\r\n  }\r\n  hue = hue + 10;\r\n  switch (e.keyCode) {\r\n    case 32:\r\n      shootLaser();\r\n      break;\r\n    case 37:\r\n      ship.rotate = ((TURN_SPEED / 180) * Math.PI) / FPS;\r\n      break;\r\n    case 38:\r\n      ship.moveForward = true;\r\n      break;\r\n    case 39:\r\n      ship.rotate = ((-TURN_SPEED / 180) * Math.PI) / FPS;\r\n      break;\r\n    case 40:\r\n      ship.moveReturn = true;\r\n      break;\r\n    case 80:\r\n      pause = !pause;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction keyUp(e) {\r\n  if (ship.dead) {\r\n    return;\r\n  }\r\n  switch (e.keyCode) {\r\n    case 32:\r\n      ship.canShoot = true;\r\n      break;\r\n    case 37:\r\n      ship.rotate = 0;\r\n      break;\r\n    case 38:\r\n      ship.moveForward = false;\r\n      break;\r\n    case 39:\r\n      ship.rotate = 0;\r\n      break;\r\n    case 40:\r\n      ship.moveReturn = false;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction newGame() {\r\n  level = 0;\r\n  score = 0;\r\n  lives = GAME_LIVE;\r\n  ship = newShip();\r\n  nextLevel();\r\n}\r\n\r\nfunction gameOver() {\r\n  ship.dead = true;\r\n  text = "Game Over";\r\n  textAlpha = 1.0;\r\n}\r\n\r\nfunction nextLevel() {\r\n  text = "Level " + (level + 1);\r\n  textAlpha = 1.0;\r\n  createAsteroids();\r\n}\r\n\r\nfunction drawShip(x, y, a, colour = "white") {\r\n  ctx.strokeStyle = colour;\r\n  ctx.lineWidth = SHIP_SIZE / 15;\r\n  ctx.beginPath();\r\n  ctx.moveTo(\r\n    x + (4 / 3) * ship.r * Math.cos(a),\r\n    y - (4 / 3) * ship.r * Math.sin(a)\r\n  );\r\n  ctx.lineTo(\r\n    x - ship.r * ((2 / 3) * Math.cos(a) + Math.sin(a)),\r\n    y + ship.r * ((2 / 3) * Math.sin(a) - Math.cos(a))\r\n  );\r\n  ctx.lineTo(\r\n    x - ship.r * ((2 / 3) * Math.cos(a) - Math.sin(a)),\r\n    y + ship.r * ((2 / 3) * Math.sin(a) + Math.cos(a))\r\n  );\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n}\r\n\r\nfunction newShip() {\r\n  return {\r\n    x: Math.floor(Math.random() * canvas.width),\r\n    y: Math.floor(Math.random() * canvas.height),\r\n    r: SHIP_SIZE / 2,\r\n    a: Math.PI / 2,\r\n    blinkNum: 30,\r\n    blinkTime: 3,\r\n    canShoot: true,\r\n    dead: false,\r\n    exploadingTime: 0,\r\n    forward: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    lasers: [],\r\n    moveForward: false,\r\n    moveReturn: false,\r\n    motion: 0.7,\r\n    rotate: 0,\r\n  };\r\n}\r\n\r\nfunction createAsteroids() {\r\n  asteroids = [];\r\n  let x, y;\r\n  for (let i = 0; i < ASTEROID_NUMBER + level; i++) {\r\n    do {\r\n      x = Math.floor(Math.random() * canvas.width);\r\n      y = Math.floor(Math.random() * canvas.height);\r\n    } while (safetyBuffer(ship.x, ship.y, x, y) < ASTEROID_SIZE * 2 + ship.r);\r\n    asteroids.push(newAsteroid(x, y, Math.ceil(ASTEROID_SIZE / 2)));\r\n  }\r\n}\r\n\r\nfunction newAsteroid(x, y, r) {\r\n  let asteroidLevel = 1 + 0.1 * level;\r\n  console.log("R", r);\r\n  let asteroid = {\r\n    x: x,\r\n    y: y,\r\n    vertically: Math.random() * 2 + ASTEROID_VERT,\r\n    xv:\r\n      ((Math.random() * ASTEROID_SPEED * asteroidLevel) / FPS) *\r\n      (Math.random() < 0.5 ? 1 : -1),\r\n    yv:\r\n      ((Math.random() * ASTEROID_SPEED * asteroidLevel) / FPS) *\r\n      (Math.random() < 0.5 ? 1 : -1),\r\n    r: r,\r\n    a: Math.PI * 2,\r\n    jaggedness: [],\r\n  };\r\n\r\n  for (let i = 0; i < ASTEROID_VERT; i++) {\r\n    asteroid.jaggedness.push(\r\n      Math.random() * ASTEROID_JAGGENDESS * 2 + 1 - ASTEROID_JAGGENDESS\r\n    );\r\n  }\r\n  return asteroid;\r\n}\r\n\r\nfunction destroyAsteroid(index) {\r\n  let x = asteroids[index].x;\r\n  let y = asteroids[index].y;\r\n  let r = asteroids[index].r;\r\n  crushing.play();\r\n\r\n  if (r == Math.ceil(ASTEROID_SIZE / 2)) {\r\n    score = score + POINTS_FOR_LARGE_ASTEROID;\r\n    asteroids.push(newAsteroid(x, y, Math.ceil(ASTEROID_SIZE / 4)));\r\n    asteroids.push(newAsteroid(x, y, Math.ceil(ASTEROID_SIZE / 4)));\r\n  } else {\r\n    score = score + POINTS_FOR_SMALL_ASTEROID;\r\n  }\r\n  asteroids.splice(index, 1);\r\n  if (asteroids.length === 0) {\r\n    level++;\r\n    nextLevel();\r\n  }\r\n}\r\n\r\nfunction explodeShip() {\r\n  ship.exploadingTime = Math.floor(SHIP_EXPLODEDURATION * FPS);\r\n  shipBlowingUp.play();\r\n}\r\n\r\nfunction safetyBuffer(x1, y1, x2, y2) {\r\n  let distansBetweenPoints = Math.sqrt(\r\n    Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)\r\n  );\r\n  return distansBetweenPoints;\r\n}\r\n\r\nfunction shootLaser() {\r\n  if (ship.canShoot) {\r\n    ship.lasers.push({\r\n      x: ship.x + (4 / 3) * ship.r * Math.cos(ship.a),\r\n      y: ship.y - (4 / 3) * ship.r * Math.sin(ship.a),\r\n      xv: (LASER_SPEED * Math.cos(ship.a)) / 50,\r\n      yv: -(LASER_SPEED * Math.sin(ship.a)) / 50,\r\n    });\r\n    shoot.play();\r\n  }\r\n  ship.canShoot = false;\r\n}\r\n\r\nfunction UPDATE() {\r\n  let blinkingOn = ship.blinkNum % INVISIBILITY === 0;\r\n  let exploding = ship.exploadingTime > 0;\r\n\r\n  // Draw Space\r\n  ctx.fillStyle = "black";\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // Draw the ship\r\n  if (!exploding) {\r\n    if (blinkingOn && !ship.dead) {\r\n      drawShip(ship.x, ship.y, ship.a);\r\n    }\r\n\r\n    // Blinking On\r\n    if (ship.blinkNum > 0) {\r\n      ship.blinkTime--;\r\n      if (ship.blinkTime === 0) {\r\n        ship.blinkTime = Math.floor(BLINK * FPS);\r\n        ship.blinkNum--;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Explode ship\r\n  else {\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 1, 7, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "red";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 1.4, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "orange";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 1.1, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "yellow";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 0.8, Math.PI * 2, false);\r\n    ctx.fill();\r\n    ctx.fillStyle = "white";\r\n    ctx.beginPath();\r\n    ctx.arc(ship.x, ship.y, ship.r * 0.5, Math.PI * 2, false);\r\n    ctx.fill();\r\n  }\r\n\r\n  // Move forward in space\r\n  if (ship.moveForward) {\r\n    ship.forward.x += (SHIP_FORWARD * Math.cos(ship.a)) / 10;\r\n    ship.forward.y += (SHIP_FORWARD * Math.sin(ship.a)) / 10;\r\n    rocketThruster.play();\r\n\r\n    // Draw Turbo Buster\r\n    if (!exploding && blinkingOn) {\r\n      ctx.fillStyle = `hsl(${hue}, 100%, 50%)`;\r\n      ctx.strokeStyle = "yellow";\r\n      ctx.lineWidth = SHIP_SIZE / 15;\r\n      ctx.beginPath();\r\n      ctx.moveTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) + 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) - 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * 2 * Math.cos(ship.a),\r\n        ship.y + ship.r * 2 * Math.sin(ship.a)\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) - 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) + 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Move return in space\r\n  } else if (ship.moveReturn && blinkingOn) {\r\n    ship.forward.y -= (SHIP_FORWARD * Math.sin(ship.a)) / 20;\r\n    ship.forward.x -= (SHIP_FORWARD * Math.cos(ship.a)) / 20;\r\n    shipReturn.play();\r\n\r\n    // Draw buster in return\r\n    if (!exploding) {\r\n      ctx.fillStyle = `hsl(${hue}, 100%, 50%)`;\r\n      ctx.strokeStyle = "yellow";\r\n      ctx.lineWidth = SHIP_SIZE / 15;\r\n      ctx.beginPath();\r\n      ctx.moveTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) + 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) - 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * Math.cos(ship.a),\r\n        ship.y + ship.r * Math.sin(ship.a)\r\n      );\r\n      ctx.lineTo(\r\n        ship.x - ship.r * ((2 / 3) * Math.cos(ship.a) - 0.7 * Math.sin(ship.a)),\r\n        ship.y + ship.r * ((2 / 3) * Math.sin(ship.a) + 0.7 * Math.cos(ship.a))\r\n      );\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n  } else {\r\n    ship.forward.x -= (ship.motion * ship.forward.x) / 5;\r\n    ship.forward.y -= (ship.motion * ship.forward.y) / 5;\r\n    rocketThruster.stop();\r\n    shipReturn.stop();\r\n  }\r\n\r\n  // Draw Laser\r\n  for (let i = 0; i < ship.lasers.length; i++) {\r\n    ctx.fillStyle = "magenta";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      ship.lasers[i].x,\r\n      ship.lasers[i].y,\r\n      SHIP_SIZE / 2,\r\n      Math.PI * 2,\r\n      0,\r\n      true\r\n    );\r\n    ctx.fill();\r\n  }\r\n  for (let i = 0; i < ship.lasers.length; i++) {\r\n    ship.lasers[i].x += ship.lasers[i].xv;\r\n    ship.lasers[i].y += ship.lasers[i].yv;\r\n    // if (ship.lasers[i].x < 0) {\r\n    //   ship.lasers[i].x = canvas.width;\r\n    // } else if (ship.lasers[i].x > canvas.width) {\r\n    //   ship.lasers[i].x = 0;\r\n    // }\r\n    // if (ship.lasers[i].y < 0) {\r\n    //   ship.lasers[i].y = canvas.height;\r\n    // } else if (ship.lasers[i].y > canvas.height) {\r\n    //   ship.lasers[i].y = 0;\r\n    // }\r\n  }\r\n\r\n  // Draw level text\r\n  if (textAlpha >= 0) {\r\n    ctx.textAlign = "center";\r\n    ctx.textBaseline = "middle";\r\n    ctx.fillStyle = "rgba(200, 200, 200, " + textAlpha + ")";\r\n    ctx.font = "normal 32px algerian ";\r\n    ctx.fillText(text, canvas.width / 2, canvas.height * 0.1);\r\n    textAlpha = textAlpha - 1.0 / TEXT_FADE_TIME / FPS;\r\n  } else if (ship.dead) {\r\n    newGame();\r\n  }\r\n\r\n  // Draw lives\r\n  for (let i = 0; i < lives; i++) {\r\n    livesColour = exploding && i === lives - 1 ? "green" : "lime";\r\n    drawShip(\r\n      SHIP_SIZE + i * SHIP_SIZE * 1.2,\r\n      SHIP_SIZE,\r\n      0.5 * Math.PI,\r\n      livesColour\r\n    );\r\n  }\r\n\r\n  // Draw Score\r\n  ctx.textAlign = "right";\r\n  ctx.textBaseline = "right";\r\n  ctx.fillStyle = "rgba(200, 200, 200)";\r\n  ctx.font = "normal 18px arial";\r\n  ctx.fillText("Score: " + score, canvas.width - SHIP_SIZE, SHIP_SIZE);\r\n\r\n  // Detect laser hits on asteroids\r\n  let asteroid_x, asteroid_y, asteroid_r, laser_x, laser_y;\r\n  for (let i = asteroids.length - 1; i >= 0; i--) {\r\n    asteroid_x = asteroids[i].x;\r\n    asteroid_y = asteroids[i].y;\r\n    asteroid_r = asteroids[i].r;\r\n\r\n    for (let j = ship.lasers.length - 1; j >= 0; j--) {\r\n      laser_x = ship.lasers[j].x;\r\n      laser_y = ship.lasers[j].y;\r\n\r\n      if (safetyBuffer(asteroid_x, asteroid_y, laser_x, laser_y) < asteroid_r) {\r\n        ship.lasers.splice(j, 1);\r\n        destroyAsteroid(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Draw asteriods\r\n  let x, y, r, a, vert, jaggedness;\r\n  for (let i = 0; i < asteroids.length; i++) {\r\n    ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`;\r\n    ctx.lineWidth = SHIP_SIZE / 20;\r\n    x = asteroids[i].x;\r\n    y = asteroids[i].y;\r\n    a = asteroids[i].a;\r\n    r = asteroids[i].r;\r\n    vert = asteroids[i].vertically;\r\n    jaggedness = asteroids[i].jaggedness;\r\n    ctx.beginPath();\r\n    ctx.moveTo(\r\n      x + r * jaggedness[0] * Math.cos(a),\r\n      y + r * jaggedness[0] * Math.sin(a)\r\n    );\r\n    for (let j = 1; j < vert; j++) {\r\n      ctx.lineTo(\r\n        x + r * jaggedness[j] * Math.cos(a + (j * Math.PI * 2) / vert),\r\n        y + r * jaggedness[j] * Math.sin(a + (j * Math.PI * 2) / vert)\r\n      );\r\n    }\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  }\r\n\r\n  // Check for collision\r\n  if (!exploding) {\r\n    if (ship.blinkNum === 0) {\r\n      for (let i = 0; i < asteroids.length; i++) {\r\n        if (\r\n          safetyBuffer(ship.x, ship.y, asteroids[i].x, asteroids[i].y) <\r\n          ship.r + asteroids[i].r\r\n        ) {\r\n          explodeShip();\r\n          destroyAsteroid(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Rotate Ship\r\n    ship.a = ship.a + ship.rotate;\r\n\r\n    // Motion Ship\r\n    ship.x = ship.x + ship.forward.x;\r\n    ship.y = ship.y - ship.forward.y;\r\n  } else {\r\n    ship.exploadingTime--;\r\n    if (ship.exploadingTime === 0) {\r\n      lives--;\r\n      if (lives === 0) {\r\n        gameOver();\r\n      } else {\r\n        ship = newShip();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Edge of screen\r\n  if (ship.x < 0 - ship.r) {\r\n    ship.x = canvas.width + ship.r;\r\n  } else if (ship.x > canvas.width + ship.r) {\r\n    ship.x = 0 - ship.r;\r\n  }\r\n  if (ship.y < 0 - ship.r) {\r\n    ship.y = canvas.height + ship.r;\r\n  } else if (ship.y > canvas.height + ship.r) {\r\n    ship.y = 0 - ship.r;\r\n  }\r\n\r\n  // Move the asteroids\r\n  for (let i = 0; i < asteroids.length; i++) {\r\n    asteroids[i].x = asteroids[i].x + asteroids[i].xv / 2;\r\n    asteroids[i].y = asteroids[i].y + asteroids[i].yv * 2;\r\n\r\n    // Edge of screen asteroids\r\n    if (asteroids[i].x < 0 - asteroids[i].r) {\r\n      asteroids[i].x = canvas.width + asteroids[i].r;\r\n    } else if (asteroids[i].x > canvas.width + asteroids[i].r) {\r\n      asteroids[i].x = 0 - asteroids[i].r;\r\n    }\r\n    if (asteroids[i].y < 0 - asteroids[i].r) {\r\n      asteroids[i].y = canvas.height + asteroids[i].r;\r\n    } else if (asteroids[i].y > canvas.height + asteroids[i].r) {\r\n      asteroids[i].y = 0 - asteroids[i].r;\r\n    }\r\n  }\r\n}\r\n\r\n// function handleKey(event) {\r\n//   console.log(event.keyCode);\r\n// }\r\n// window.addEventListener("keydown", handleKey);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi5qcz85MjkxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFlOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNkJBQTZCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsbUJBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNkJBQTZCLElBQUk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsSUFBSTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsd0JBQXdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0NBQW9DLFFBQVE7QUFDNUM7QUFDQTtBQUNBOztBQUVBLHdDQUF3QyxRQUFRO0FBQ2hEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkMsNkJBQTZCLElBQUk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0JBQXNCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoXCJ1c2Ugc3RyaWN0XCIpO1xyXG5cclxuaWYgKFwic2VydmljZVdvcmtlclwiIGluIG5hdmlnYXRvcikge1xyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3RlcihcInNlcnZpY2V3b3JrZXIuanNcIikudGhlbihcclxuICAgICAgZnVuY3Rpb24gKHJlZ2lzdHJhdGlvbikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICAgICAgXCJTZXJ2aWNlV29ya2VyIHJlZ2lzdHJhdGlvbiBzdWNjZXNzZnVsIHdpdGggc2NvcGU6IFwiLFxyXG4gICAgICAgICAgcmVnaXN0cmF0aW9uLnNjb3BlXHJcbiAgICAgICAgKTtcclxuICAgICAgfSxcclxuICAgICAgZnVuY3Rpb24gKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiU2VydmljZVdvcmtlciByZWdpc3RyYXRpb24gZmFpbGVkOiBcIiwgZXJyKTtcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9KTtcclxufVxyXG5jb25zb2xlLmxvZyhgaXQgd29ya3NgKTtcclxuXHJcbmNvbnN0IEFTVEVST0lEX05VTUJFUiA9IDI7XHJcbmNvbnN0IEFTVEVST0lEX1NJWkUgPSA1MDtcclxuY29uc3QgQVNURVJPSURfU1BFRUQgPSA0MDtcclxuY29uc3QgQVNURVJPSURfVkVSVCA9IDEwO1xyXG5jb25zdCBBU1RFUk9JRF9KQUdHRU5ERVNTID0gMC41O1xyXG5jb25zdCBCTElOSyA9IDAuMTtcclxuY29uc3QgRlBTID0gMzA7XHJcbmNvbnN0IEdBTUVfTElWRSA9IDM7XHJcbmNvbnN0IElOVklTSUJJTElUWSA9IDM7XHJcbmNvbnN0IExBU0VSX01BWCA9IDEyMDtcclxuY29uc3QgTEFTRVJfU1BFRUQgPSA1MDA7XHJcbmNvbnN0IFBPSU5UU19GT1JfTEFSR0VfQVNURVJPSUQgPSAxMDtcclxuY29uc3QgUE9JTlRTX0ZPUl9TTUFMTF9BU1RFUk9JRCA9IDIwO1xyXG5jb25zdCBTSElQX1NJWkUgPSAzMDtcclxuY29uc3QgU0hJUF9GT1JXQVJEID0gNTtcclxuY29uc3QgU0hJUF9FWFBMT0RFRFVSQVRJT04gPSAxO1xyXG5jb25zdCBUVVJOX1NQRUVEID0gMjcwO1xyXG5jb25zdCBURVhUX0ZBREVfVElNRSA9IDM7XHJcblxyXG5sZXQgYXN0ZXJvaWRzID0gW107XHJcbmxldCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdhbWVDYW52YXNcIik7XHJcbmxldCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5sZXQgaHVlID0gMDtcclxubGV0IGxldmVsO1xyXG5sZXQgbGl2ZXMgPSAzO1xyXG5sZXQgbGl2ZXNDb2xvdXI7XHJcbmxldCBwYXVzZSA9IGZhbHNlO1xyXG5sZXQgc2hpcDtcclxubGV0IHRleHQ7XHJcbmxldCB0ZXh0QWxwaGE7XHJcbmxldCBzY29yZTtcclxuXHJcbmxldCBzaG9vdCA9IG5ldyBzb3VuZEVmZmVjdChcImFzc2V0cy9zb3VuZHMvU2hvb3Qud2F2XCIsIDAuNCwgMTApO1xyXG5sZXQgY3J1c2hpbmcgPSBuZXcgc291bmRFZmZlY3QoXCJhc3NldHMvc291bmRzL0NydXNoaW5nLndhdlwiLCAxLjAsIDUpO1xyXG5sZXQgc2hpcFJldHVybiA9IG5ldyBzb3VuZEVmZmVjdChcImFzc2V0cy9zb3VuZHMvUm9ja2V0X1RocnVzdGVycy53YXZcIik7XHJcbmxldCBzaGlwQmxvd2luZ1VwID0gbmV3IHNvdW5kRWZmZWN0KFwiYXNzZXRzL3NvdW5kcy9TaGlwX0V4cGxvc2lvbi53YXZcIik7XHJcbmxldCByb2NrZXRUaHJ1c3RlciA9IG5ldyBzb3VuZEVmZmVjdChcImFzc2V0cy9zb3VuZHMvUmV0dXJuLndhdlwiKTtcclxuXHJcbmZ1bmN0aW9uIHNvdW5kRWZmZWN0KHNyYywgc291bmRWb2x1bWUgPSAxLjAsIG1heFNlcmllcyA9IDEpIHtcclxuICBsZXQgc2hvb3RTZXJpZXMgPSB0aGlzLnNob290U2VyaWVzO1xyXG4gIGxldCBzdHJlYW1zID0gdGhpcy5zdHJlYW1zO1xyXG4gIHNob290U2VyaWVzID0gMTtcclxuICBzdHJlYW1zID0gW107XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPD0gbWF4U2VyaWVzOyBpKyspIHtcclxuICAgIHN0cmVhbXMucHVzaChuZXcgQXVkaW8oc3JjKSk7XHJcbiAgICBzdHJlYW1zW2ldLnZvbHVtZSA9IHNvdW5kVm9sdW1lO1xyXG4gIH1cclxuICB0aGlzLnBsYXkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBzaG9vdFNlcmllcyA9IChzaG9vdFNlcmllcyArIDEpICUgbWF4U2VyaWVzO1xyXG4gICAgc3RyZWFtc1tzaG9vdFNlcmllc10ucGxheSgpO1xyXG4gIH07XHJcbiAgdGhpcy5zdG9wID0gZnVuY3Rpb24gKCkge1xyXG4gICAgc3RyZWFtc1tzaG9vdFNlcmllc10ucGF1c2UoKTtcclxuICAgIHN0cmVhbXNbc2hvb3RTZXJpZXNdLmN1cnJlbnRUaW1lID0gMDtcclxuICB9O1xyXG59XHJcblxyXG5uZXdHYW1lKCk7XHJcblxyXG5mdW5jdGlvbiBTdGFydFN0b3AoKSB7XHJcbiAgd2luZG93LnNldEludGVydmFsKCgpID0+IHtcclxuICAgIGlmICghcGF1c2UpIHtcclxuICAgICAgVVBEQVRFKCk7XHJcbiAgICB9XHJcbiAgfSwgMzApO1xyXG59XHJcblN0YXJ0U3RvcCgpO1xyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwga2V5RG93bik7XHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCBrZXlVcCk7XHJcblxyXG5mdW5jdGlvbiBrZXlEb3duKGUpIHtcclxuICBpZiAoc2hpcC5kZWFkKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGh1ZSA9IGh1ZSArIDEwO1xyXG4gIHN3aXRjaCAoZS5rZXlDb2RlKSB7XHJcbiAgICBjYXNlIDMyOlxyXG4gICAgICBzaG9vdExhc2VyKCk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAzNzpcclxuICAgICAgc2hpcC5yb3RhdGUgPSAoKFRVUk5fU1BFRUQgLyAxODApICogTWF0aC5QSSkgLyBGUFM7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAzODpcclxuICAgICAgc2hpcC5tb3ZlRm9yd2FyZCA9IHRydWU7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAzOTpcclxuICAgICAgc2hpcC5yb3RhdGUgPSAoKC1UVVJOX1NQRUVEIC8gMTgwKSAqIE1hdGguUEkpIC8gRlBTO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgNDA6XHJcbiAgICAgIHNoaXAubW92ZVJldHVybiA9IHRydWU7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSA4MDpcclxuICAgICAgcGF1c2UgPSAhcGF1c2U7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBrZXlVcChlKSB7XHJcbiAgaWYgKHNoaXAuZGVhZCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBzd2l0Y2ggKGUua2V5Q29kZSkge1xyXG4gICAgY2FzZSAzMjpcclxuICAgICAgc2hpcC5jYW5TaG9vdCA9IHRydWU7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAzNzpcclxuICAgICAgc2hpcC5yb3RhdGUgPSAwO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgMzg6XHJcbiAgICAgIHNoaXAubW92ZUZvcndhcmQgPSBmYWxzZTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIDM5OlxyXG4gICAgICBzaGlwLnJvdGF0ZSA9IDA7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSA0MDpcclxuICAgICAgc2hpcC5tb3ZlUmV0dXJuID0gZmFsc2U7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBuZXdHYW1lKCkge1xyXG4gIGxldmVsID0gMDtcclxuICBzY29yZSA9IDA7XHJcbiAgbGl2ZXMgPSBHQU1FX0xJVkU7XHJcbiAgc2hpcCA9IG5ld1NoaXAoKTtcclxuICBuZXh0TGV2ZWwoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2FtZU92ZXIoKSB7XHJcbiAgc2hpcC5kZWFkID0gdHJ1ZTtcclxuICB0ZXh0ID0gXCJHYW1lIE92ZXJcIjtcclxuICB0ZXh0QWxwaGEgPSAxLjA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5leHRMZXZlbCgpIHtcclxuICB0ZXh0ID0gXCJMZXZlbCBcIiArIChsZXZlbCArIDEpO1xyXG4gIHRleHRBbHBoYSA9IDEuMDtcclxuICBjcmVhdGVBc3Rlcm9pZHMoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZHJhd1NoaXAoeCwgeSwgYSwgY29sb3VyID0gXCJ3aGl0ZVwiKSB7XHJcbiAgY3R4LnN0cm9rZVN0eWxlID0gY29sb3VyO1xyXG4gIGN0eC5saW5lV2lkdGggPSBTSElQX1NJWkUgLyAxNTtcclxuICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgY3R4Lm1vdmVUbyhcclxuICAgIHggKyAoNCAvIDMpICogc2hpcC5yICogTWF0aC5jb3MoYSksXHJcbiAgICB5IC0gKDQgLyAzKSAqIHNoaXAuciAqIE1hdGguc2luKGEpXHJcbiAgKTtcclxuICBjdHgubGluZVRvKFxyXG4gICAgeCAtIHNoaXAuciAqICgoMiAvIDMpICogTWF0aC5jb3MoYSkgKyBNYXRoLnNpbihhKSksXHJcbiAgICB5ICsgc2hpcC5yICogKCgyIC8gMykgKiBNYXRoLnNpbihhKSAtIE1hdGguY29zKGEpKVxyXG4gICk7XHJcbiAgY3R4LmxpbmVUbyhcclxuICAgIHggLSBzaGlwLnIgKiAoKDIgLyAzKSAqIE1hdGguY29zKGEpIC0gTWF0aC5zaW4oYSkpLFxyXG4gICAgeSArIHNoaXAuciAqICgoMiAvIDMpICogTWF0aC5zaW4oYSkgKyBNYXRoLmNvcyhhKSlcclxuICApO1xyXG4gIGN0eC5jbG9zZVBhdGgoKTtcclxuICBjdHguc3Ryb2tlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5ld1NoaXAoKSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIHg6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNhbnZhcy53aWR0aCksXHJcbiAgICB5OiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjYW52YXMuaGVpZ2h0KSxcclxuICAgIHI6IFNISVBfU0laRSAvIDIsXHJcbiAgICBhOiBNYXRoLlBJIC8gMixcclxuICAgIGJsaW5rTnVtOiAzMCxcclxuICAgIGJsaW5rVGltZTogMyxcclxuICAgIGNhblNob290OiB0cnVlLFxyXG4gICAgZGVhZDogZmFsc2UsXHJcbiAgICBleHBsb2FkaW5nVGltZTogMCxcclxuICAgIGZvcndhcmQ6IHtcclxuICAgICAgeDogMCxcclxuICAgICAgeTogMCxcclxuICAgIH0sXHJcbiAgICBsYXNlcnM6IFtdLFxyXG4gICAgbW92ZUZvcndhcmQ6IGZhbHNlLFxyXG4gICAgbW92ZVJldHVybjogZmFsc2UsXHJcbiAgICBtb3Rpb246IDAuNyxcclxuICAgIHJvdGF0ZTogMCxcclxuICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVBc3Rlcm9pZHMoKSB7XHJcbiAgYXN0ZXJvaWRzID0gW107XHJcbiAgbGV0IHgsIHk7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBBU1RFUk9JRF9OVU1CRVIgKyBsZXZlbDsgaSsrKSB7XHJcbiAgICBkbyB7XHJcbiAgICAgIHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjYW52YXMud2lkdGgpO1xyXG4gICAgICB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2FudmFzLmhlaWdodCk7XHJcbiAgICB9IHdoaWxlIChzYWZldHlCdWZmZXIoc2hpcC54LCBzaGlwLnksIHgsIHkpIDwgQVNURVJPSURfU0laRSAqIDIgKyBzaGlwLnIpO1xyXG4gICAgYXN0ZXJvaWRzLnB1c2gobmV3QXN0ZXJvaWQoeCwgeSwgTWF0aC5jZWlsKEFTVEVST0lEX1NJWkUgLyAyKSkpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gbmV3QXN0ZXJvaWQoeCwgeSwgcikge1xyXG4gIGxldCBhc3Rlcm9pZExldmVsID0gMSArIDAuMSAqIGxldmVsO1xyXG4gIGNvbnNvbGUubG9nKFwiUlwiLCByKTtcclxuICBsZXQgYXN0ZXJvaWQgPSB7XHJcbiAgICB4OiB4LFxyXG4gICAgeTogeSxcclxuICAgIHZlcnRpY2FsbHk6IE1hdGgucmFuZG9tKCkgKiAyICsgQVNURVJPSURfVkVSVCxcclxuICAgIHh2OlxyXG4gICAgICAoKE1hdGgucmFuZG9tKCkgKiBBU1RFUk9JRF9TUEVFRCAqIGFzdGVyb2lkTGV2ZWwpIC8gRlBTKSAqXHJcbiAgICAgIChNYXRoLnJhbmRvbSgpIDwgMC41ID8gMSA6IC0xKSxcclxuICAgIHl2OlxyXG4gICAgICAoKE1hdGgucmFuZG9tKCkgKiBBU1RFUk9JRF9TUEVFRCAqIGFzdGVyb2lkTGV2ZWwpIC8gRlBTKSAqXHJcbiAgICAgIChNYXRoLnJhbmRvbSgpIDwgMC41ID8gMSA6IC0xKSxcclxuICAgIHI6IHIsXHJcbiAgICBhOiBNYXRoLlBJICogMixcclxuICAgIGphZ2dlZG5lc3M6IFtdLFxyXG4gIH07XHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgQVNURVJPSURfVkVSVDsgaSsrKSB7XHJcbiAgICBhc3Rlcm9pZC5qYWdnZWRuZXNzLnB1c2goXHJcbiAgICAgIE1hdGgucmFuZG9tKCkgKiBBU1RFUk9JRF9KQUdHRU5ERVNTICogMiArIDEgLSBBU1RFUk9JRF9KQUdHRU5ERVNTXHJcbiAgICApO1xyXG4gIH1cclxuICByZXR1cm4gYXN0ZXJvaWQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlc3Ryb3lBc3Rlcm9pZChpbmRleCkge1xyXG4gIGxldCB4ID0gYXN0ZXJvaWRzW2luZGV4XS54O1xyXG4gIGxldCB5ID0gYXN0ZXJvaWRzW2luZGV4XS55O1xyXG4gIGxldCByID0gYXN0ZXJvaWRzW2luZGV4XS5yO1xyXG4gIGNydXNoaW5nLnBsYXkoKTtcclxuXHJcbiAgaWYgKHIgPT0gTWF0aC5jZWlsKEFTVEVST0lEX1NJWkUgLyAyKSkge1xyXG4gICAgc2NvcmUgPSBzY29yZSArIFBPSU5UU19GT1JfTEFSR0VfQVNURVJPSUQ7XHJcbiAgICBhc3Rlcm9pZHMucHVzaChuZXdBc3Rlcm9pZCh4LCB5LCBNYXRoLmNlaWwoQVNURVJPSURfU0laRSAvIDQpKSk7XHJcbiAgICBhc3Rlcm9pZHMucHVzaChuZXdBc3Rlcm9pZCh4LCB5LCBNYXRoLmNlaWwoQVNURVJPSURfU0laRSAvIDQpKSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHNjb3JlID0gc2NvcmUgKyBQT0lOVFNfRk9SX1NNQUxMX0FTVEVST0lEO1xyXG4gIH1cclxuICBhc3Rlcm9pZHMuc3BsaWNlKGluZGV4LCAxKTtcclxuICBpZiAoYXN0ZXJvaWRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgbGV2ZWwrKztcclxuICAgIG5leHRMZXZlbCgpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZXhwbG9kZVNoaXAoKSB7XHJcbiAgc2hpcC5leHBsb2FkaW5nVGltZSA9IE1hdGguZmxvb3IoU0hJUF9FWFBMT0RFRFVSQVRJT04gKiBGUFMpO1xyXG4gIHNoaXBCbG93aW5nVXAucGxheSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzYWZldHlCdWZmZXIoeDEsIHkxLCB4MiwgeTIpIHtcclxuICBsZXQgZGlzdGFuc0JldHdlZW5Qb2ludHMgPSBNYXRoLnNxcnQoXHJcbiAgICBNYXRoLnBvdyh4MiAtIHgxLCAyKSArIE1hdGgucG93KHkyIC0geTEsIDIpXHJcbiAgKTtcclxuICByZXR1cm4gZGlzdGFuc0JldHdlZW5Qb2ludHM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNob290TGFzZXIoKSB7XHJcbiAgaWYgKHNoaXAuY2FuU2hvb3QpIHtcclxuICAgIHNoaXAubGFzZXJzLnB1c2goe1xyXG4gICAgICB4OiBzaGlwLnggKyAoNCAvIDMpICogc2hpcC5yICogTWF0aC5jb3Moc2hpcC5hKSxcclxuICAgICAgeTogc2hpcC55IC0gKDQgLyAzKSAqIHNoaXAuciAqIE1hdGguc2luKHNoaXAuYSksXHJcbiAgICAgIHh2OiAoTEFTRVJfU1BFRUQgKiBNYXRoLmNvcyhzaGlwLmEpKSAvIDUwLFxyXG4gICAgICB5djogLShMQVNFUl9TUEVFRCAqIE1hdGguc2luKHNoaXAuYSkpIC8gNTAsXHJcbiAgICB9KTtcclxuICAgIHNob290LnBsYXkoKTtcclxuICB9XHJcbiAgc2hpcC5jYW5TaG9vdCA9IGZhbHNlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBVUERBVEUoKSB7XHJcbiAgbGV0IGJsaW5raW5nT24gPSBzaGlwLmJsaW5rTnVtICUgSU5WSVNJQklMSVRZID09PSAwO1xyXG4gIGxldCBleHBsb2RpbmcgPSBzaGlwLmV4cGxvYWRpbmdUaW1lID4gMDtcclxuXHJcbiAgLy8gRHJhdyBTcGFjZVxyXG4gIGN0eC5maWxsU3R5bGUgPSBcImJsYWNrXCI7XHJcbiAgY3R4LmZpbGxSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XHJcblxyXG4gIC8vIERyYXcgdGhlIHNoaXBcclxuICBpZiAoIWV4cGxvZGluZykge1xyXG4gICAgaWYgKGJsaW5raW5nT24gJiYgIXNoaXAuZGVhZCkge1xyXG4gICAgICBkcmF3U2hpcChzaGlwLngsIHNoaXAueSwgc2hpcC5hKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBCbGlua2luZyBPblxyXG4gICAgaWYgKHNoaXAuYmxpbmtOdW0gPiAwKSB7XHJcbiAgICAgIHNoaXAuYmxpbmtUaW1lLS07XHJcbiAgICAgIGlmIChzaGlwLmJsaW5rVGltZSA9PT0gMCkge1xyXG4gICAgICAgIHNoaXAuYmxpbmtUaW1lID0gTWF0aC5mbG9vcihCTElOSyAqIEZQUyk7XHJcbiAgICAgICAgc2hpcC5ibGlua051bS0tO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBFeHBsb2RlIHNoaXBcclxuICBlbHNlIHtcclxuICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgIGN0eC5hcmMoc2hpcC54LCBzaGlwLnksIHNoaXAuciAqIDEsIDcsIE1hdGguUEkgKiAyLCBmYWxzZSk7XHJcbiAgICBjdHguZmlsbCgpO1xyXG4gICAgY3R4LmZpbGxTdHlsZSA9IFwicmVkXCI7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKHNoaXAueCwgc2hpcC55LCBzaGlwLnIgKiAxLjQsIE1hdGguUEkgKiAyLCBmYWxzZSk7XHJcbiAgICBjdHguZmlsbCgpO1xyXG4gICAgY3R4LmZpbGxTdHlsZSA9IFwib3JhbmdlXCI7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKHNoaXAueCwgc2hpcC55LCBzaGlwLnIgKiAxLjEsIE1hdGguUEkgKiAyLCBmYWxzZSk7XHJcbiAgICBjdHguZmlsbCgpO1xyXG4gICAgY3R4LmZpbGxTdHlsZSA9IFwieWVsbG93XCI7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKHNoaXAueCwgc2hpcC55LCBzaGlwLnIgKiAwLjgsIE1hdGguUEkgKiAyLCBmYWxzZSk7XHJcbiAgICBjdHguZmlsbCgpO1xyXG4gICAgY3R4LmZpbGxTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgIGN0eC5hcmMoc2hpcC54LCBzaGlwLnksIHNoaXAuciAqIDAuNSwgTWF0aC5QSSAqIDIsIGZhbHNlKTtcclxuICAgIGN0eC5maWxsKCk7XHJcbiAgfVxyXG5cclxuICAvLyBNb3ZlIGZvcndhcmQgaW4gc3BhY2VcclxuICBpZiAoc2hpcC5tb3ZlRm9yd2FyZCkge1xyXG4gICAgc2hpcC5mb3J3YXJkLnggKz0gKFNISVBfRk9SV0FSRCAqIE1hdGguY29zKHNoaXAuYSkpIC8gMTA7XHJcbiAgICBzaGlwLmZvcndhcmQueSArPSAoU0hJUF9GT1JXQVJEICogTWF0aC5zaW4oc2hpcC5hKSkgLyAxMDtcclxuICAgIHJvY2tldFRocnVzdGVyLnBsYXkoKTtcclxuXHJcbiAgICAvLyBEcmF3IFR1cmJvIEJ1c3RlclxyXG4gICAgaWYgKCFleHBsb2RpbmcgJiYgYmxpbmtpbmdPbikge1xyXG4gICAgICBjdHguZmlsbFN0eWxlID0gYGhzbCgke2h1ZX0sIDEwMCUsIDUwJSlgO1xyXG4gICAgICBjdHguc3Ryb2tlU3R5bGUgPSBcInllbGxvd1wiO1xyXG4gICAgICBjdHgubGluZVdpZHRoID0gU0hJUF9TSVpFIC8gMTU7XHJcbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgY3R4Lm1vdmVUbyhcclxuICAgICAgICBzaGlwLnggLSBzaGlwLnIgKiAoKDIgLyAzKSAqIE1hdGguY29zKHNoaXAuYSkgKyAwLjcgKiBNYXRoLnNpbihzaGlwLmEpKSxcclxuICAgICAgICBzaGlwLnkgKyBzaGlwLnIgKiAoKDIgLyAzKSAqIE1hdGguc2luKHNoaXAuYSkgLSAwLjcgKiBNYXRoLmNvcyhzaGlwLmEpKVxyXG4gICAgICApO1xyXG4gICAgICBjdHgubGluZVRvKFxyXG4gICAgICAgIHNoaXAueCAtIHNoaXAuciAqIDIgKiBNYXRoLmNvcyhzaGlwLmEpLFxyXG4gICAgICAgIHNoaXAueSArIHNoaXAuciAqIDIgKiBNYXRoLnNpbihzaGlwLmEpXHJcbiAgICAgICk7XHJcbiAgICAgIGN0eC5saW5lVG8oXHJcbiAgICAgICAgc2hpcC54IC0gc2hpcC5yICogKCgyIC8gMykgKiBNYXRoLmNvcyhzaGlwLmEpIC0gMC43ICogTWF0aC5zaW4oc2hpcC5hKSksXHJcbiAgICAgICAgc2hpcC55ICsgc2hpcC5yICogKCgyIC8gMykgKiBNYXRoLnNpbihzaGlwLmEpICsgMC43ICogTWF0aC5jb3Moc2hpcC5hKSlcclxuICAgICAgKTtcclxuICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgICBjdHguZmlsbCgpO1xyXG4gICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTW92ZSByZXR1cm4gaW4gc3BhY2VcclxuICB9IGVsc2UgaWYgKHNoaXAubW92ZVJldHVybiAmJiBibGlua2luZ09uKSB7XHJcbiAgICBzaGlwLmZvcndhcmQueSAtPSAoU0hJUF9GT1JXQVJEICogTWF0aC5zaW4oc2hpcC5hKSkgLyAyMDtcclxuICAgIHNoaXAuZm9yd2FyZC54IC09IChTSElQX0ZPUldBUkQgKiBNYXRoLmNvcyhzaGlwLmEpKSAvIDIwO1xyXG4gICAgc2hpcFJldHVybi5wbGF5KCk7XHJcblxyXG4gICAgLy8gRHJhdyBidXN0ZXIgaW4gcmV0dXJuXHJcbiAgICBpZiAoIWV4cGxvZGluZykge1xyXG4gICAgICBjdHguZmlsbFN0eWxlID0gYGhzbCgke2h1ZX0sIDEwMCUsIDUwJSlgO1xyXG4gICAgICBjdHguc3Ryb2tlU3R5bGUgPSBcInllbGxvd1wiO1xyXG4gICAgICBjdHgubGluZVdpZHRoID0gU0hJUF9TSVpFIC8gMTU7XHJcbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgY3R4Lm1vdmVUbyhcclxuICAgICAgICBzaGlwLnggLSBzaGlwLnIgKiAoKDIgLyAzKSAqIE1hdGguY29zKHNoaXAuYSkgKyAwLjcgKiBNYXRoLnNpbihzaGlwLmEpKSxcclxuICAgICAgICBzaGlwLnkgKyBzaGlwLnIgKiAoKDIgLyAzKSAqIE1hdGguc2luKHNoaXAuYSkgLSAwLjcgKiBNYXRoLmNvcyhzaGlwLmEpKVxyXG4gICAgICApO1xyXG4gICAgICBjdHgubGluZVRvKFxyXG4gICAgICAgIHNoaXAueCAtIHNoaXAuciAqIE1hdGguY29zKHNoaXAuYSksXHJcbiAgICAgICAgc2hpcC55ICsgc2hpcC5yICogTWF0aC5zaW4oc2hpcC5hKVxyXG4gICAgICApO1xyXG4gICAgICBjdHgubGluZVRvKFxyXG4gICAgICAgIHNoaXAueCAtIHNoaXAuciAqICgoMiAvIDMpICogTWF0aC5jb3Moc2hpcC5hKSAtIDAuNyAqIE1hdGguc2luKHNoaXAuYSkpLFxyXG4gICAgICAgIHNoaXAueSArIHNoaXAuciAqICgoMiAvIDMpICogTWF0aC5zaW4oc2hpcC5hKSArIDAuNyAqIE1hdGguY29zKHNoaXAuYSkpXHJcbiAgICAgICk7XHJcbiAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBzaGlwLmZvcndhcmQueCAtPSAoc2hpcC5tb3Rpb24gKiBzaGlwLmZvcndhcmQueCkgLyA1O1xyXG4gICAgc2hpcC5mb3J3YXJkLnkgLT0gKHNoaXAubW90aW9uICogc2hpcC5mb3J3YXJkLnkpIC8gNTtcclxuICAgIHJvY2tldFRocnVzdGVyLnN0b3AoKTtcclxuICAgIHNoaXBSZXR1cm4uc3RvcCgpO1xyXG4gIH1cclxuXHJcbiAgLy8gRHJhdyBMYXNlclxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcC5sYXNlcnMubGVuZ3RoOyBpKyspIHtcclxuICAgIGN0eC5maWxsU3R5bGUgPSBcIm1hZ2VudGFcIjtcclxuICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgIGN0eC5hcmMoXHJcbiAgICAgIHNoaXAubGFzZXJzW2ldLngsXHJcbiAgICAgIHNoaXAubGFzZXJzW2ldLnksXHJcbiAgICAgIFNISVBfU0laRSAvIDIsXHJcbiAgICAgIE1hdGguUEkgKiAyLFxyXG4gICAgICAwLFxyXG4gICAgICB0cnVlXHJcbiAgICApO1xyXG4gICAgY3R4LmZpbGwoKTtcclxuICB9XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxhc2Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgc2hpcC5sYXNlcnNbaV0ueCArPSBzaGlwLmxhc2Vyc1tpXS54djtcclxuICAgIHNoaXAubGFzZXJzW2ldLnkgKz0gc2hpcC5sYXNlcnNbaV0ueXY7XHJcbiAgICAvLyBpZiAoc2hpcC5sYXNlcnNbaV0ueCA8IDApIHtcclxuICAgIC8vICAgc2hpcC5sYXNlcnNbaV0ueCA9IGNhbnZhcy53aWR0aDtcclxuICAgIC8vIH0gZWxzZSBpZiAoc2hpcC5sYXNlcnNbaV0ueCA+IGNhbnZhcy53aWR0aCkge1xyXG4gICAgLy8gICBzaGlwLmxhc2Vyc1tpXS54ID0gMDtcclxuICAgIC8vIH1cclxuICAgIC8vIGlmIChzaGlwLmxhc2Vyc1tpXS55IDwgMCkge1xyXG4gICAgLy8gICBzaGlwLmxhc2Vyc1tpXS55ID0gY2FudmFzLmhlaWdodDtcclxuICAgIC8vIH0gZWxzZSBpZiAoc2hpcC5sYXNlcnNbaV0ueSA+IGNhbnZhcy5oZWlnaHQpIHtcclxuICAgIC8vICAgc2hpcC5sYXNlcnNbaV0ueSA9IDA7XHJcbiAgICAvLyB9XHJcbiAgfVxyXG5cclxuICAvLyBEcmF3IGxldmVsIHRleHRcclxuICBpZiAodGV4dEFscGhhID49IDApIHtcclxuICAgIGN0eC50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xyXG4gICAgY3R4LnRleHRCYXNlbGluZSA9IFwibWlkZGxlXCI7XHJcbiAgICBjdHguZmlsbFN0eWxlID0gXCJyZ2JhKDIwMCwgMjAwLCAyMDAsIFwiICsgdGV4dEFscGhhICsgXCIpXCI7XHJcbiAgICBjdHguZm9udCA9IFwibm9ybWFsIDMycHggYWxnZXJpYW4gXCI7XHJcbiAgICBjdHguZmlsbFRleHQodGV4dCwgY2FudmFzLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAqIDAuMSk7XHJcbiAgICB0ZXh0QWxwaGEgPSB0ZXh0QWxwaGEgLSAxLjAgLyBURVhUX0ZBREVfVElNRSAvIEZQUztcclxuICB9IGVsc2UgaWYgKHNoaXAuZGVhZCkge1xyXG4gICAgbmV3R2FtZSgpO1xyXG4gIH1cclxuXHJcbiAgLy8gRHJhdyBsaXZlc1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGl2ZXM7IGkrKykge1xyXG4gICAgbGl2ZXNDb2xvdXIgPSBleHBsb2RpbmcgJiYgaSA9PT0gbGl2ZXMgLSAxID8gXCJncmVlblwiIDogXCJsaW1lXCI7XHJcbiAgICBkcmF3U2hpcChcclxuICAgICAgU0hJUF9TSVpFICsgaSAqIFNISVBfU0laRSAqIDEuMixcclxuICAgICAgU0hJUF9TSVpFLFxyXG4gICAgICAwLjUgKiBNYXRoLlBJLFxyXG4gICAgICBsaXZlc0NvbG91clxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8vIERyYXcgU2NvcmVcclxuICBjdHgudGV4dEFsaWduID0gXCJyaWdodFwiO1xyXG4gIGN0eC50ZXh0QmFzZWxpbmUgPSBcInJpZ2h0XCI7XHJcbiAgY3R4LmZpbGxTdHlsZSA9IFwicmdiYSgyMDAsIDIwMCwgMjAwKVwiO1xyXG4gIGN0eC5mb250ID0gXCJub3JtYWwgMThweCBhcmlhbFwiO1xyXG4gIGN0eC5maWxsVGV4dChcIlNjb3JlOiBcIiArIHNjb3JlLCBjYW52YXMud2lkdGggLSBTSElQX1NJWkUsIFNISVBfU0laRSk7XHJcblxyXG4gIC8vIERldGVjdCBsYXNlciBoaXRzIG9uIGFzdGVyb2lkc1xyXG4gIGxldCBhc3Rlcm9pZF94LCBhc3Rlcm9pZF95LCBhc3Rlcm9pZF9yLCBsYXNlcl94LCBsYXNlcl95O1xyXG4gIGZvciAobGV0IGkgPSBhc3Rlcm9pZHMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgIGFzdGVyb2lkX3ggPSBhc3Rlcm9pZHNbaV0ueDtcclxuICAgIGFzdGVyb2lkX3kgPSBhc3Rlcm9pZHNbaV0ueTtcclxuICAgIGFzdGVyb2lkX3IgPSBhc3Rlcm9pZHNbaV0ucjtcclxuXHJcbiAgICBmb3IgKGxldCBqID0gc2hpcC5sYXNlcnMubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0pIHtcclxuICAgICAgbGFzZXJfeCA9IHNoaXAubGFzZXJzW2pdLng7XHJcbiAgICAgIGxhc2VyX3kgPSBzaGlwLmxhc2Vyc1tqXS55O1xyXG5cclxuICAgICAgaWYgKHNhZmV0eUJ1ZmZlcihhc3Rlcm9pZF94LCBhc3Rlcm9pZF95LCBsYXNlcl94LCBsYXNlcl95KSA8IGFzdGVyb2lkX3IpIHtcclxuICAgICAgICBzaGlwLmxhc2Vycy5zcGxpY2UoaiwgMSk7XHJcbiAgICAgICAgZGVzdHJveUFzdGVyb2lkKGksIDEpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBEcmF3IGFzdGVyaW9kc1xyXG4gIGxldCB4LCB5LCByLCBhLCB2ZXJ0LCBqYWdnZWRuZXNzO1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXN0ZXJvaWRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSBgaHNsKCR7aHVlfSwgMTAwJSwgNTAlKWA7XHJcbiAgICBjdHgubGluZVdpZHRoID0gU0hJUF9TSVpFIC8gMjA7XHJcbiAgICB4ID0gYXN0ZXJvaWRzW2ldLng7XHJcbiAgICB5ID0gYXN0ZXJvaWRzW2ldLnk7XHJcbiAgICBhID0gYXN0ZXJvaWRzW2ldLmE7XHJcbiAgICByID0gYXN0ZXJvaWRzW2ldLnI7XHJcbiAgICB2ZXJ0ID0gYXN0ZXJvaWRzW2ldLnZlcnRpY2FsbHk7XHJcbiAgICBqYWdnZWRuZXNzID0gYXN0ZXJvaWRzW2ldLmphZ2dlZG5lc3M7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHgubW92ZVRvKFxyXG4gICAgICB4ICsgciAqIGphZ2dlZG5lc3NbMF0gKiBNYXRoLmNvcyhhKSxcclxuICAgICAgeSArIHIgKiBqYWdnZWRuZXNzWzBdICogTWF0aC5zaW4oYSlcclxuICAgICk7XHJcbiAgICBmb3IgKGxldCBqID0gMTsgaiA8IHZlcnQ7IGorKykge1xyXG4gICAgICBjdHgubGluZVRvKFxyXG4gICAgICAgIHggKyByICogamFnZ2VkbmVzc1tqXSAqIE1hdGguY29zKGEgKyAoaiAqIE1hdGguUEkgKiAyKSAvIHZlcnQpLFxyXG4gICAgICAgIHkgKyByICogamFnZ2VkbmVzc1tqXSAqIE1hdGguc2luKGEgKyAoaiAqIE1hdGguUEkgKiAyKSAvIHZlcnQpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICBjdHguc3Ryb2tlKCk7XHJcbiAgfVxyXG5cclxuICAvLyBDaGVjayBmb3IgY29sbGlzaW9uXHJcbiAgaWYgKCFleHBsb2RpbmcpIHtcclxuICAgIGlmIChzaGlwLmJsaW5rTnVtID09PSAwKSB7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXN0ZXJvaWRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgc2FmZXR5QnVmZmVyKHNoaXAueCwgc2hpcC55LCBhc3Rlcm9pZHNbaV0ueCwgYXN0ZXJvaWRzW2ldLnkpIDxcclxuICAgICAgICAgIHNoaXAuciArIGFzdGVyb2lkc1tpXS5yXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICBleHBsb2RlU2hpcCgpO1xyXG4gICAgICAgICAgZGVzdHJveUFzdGVyb2lkKGkpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUm90YXRlIFNoaXBcclxuICAgIHNoaXAuYSA9IHNoaXAuYSArIHNoaXAucm90YXRlO1xyXG5cclxuICAgIC8vIE1vdGlvbiBTaGlwXHJcbiAgICBzaGlwLnggPSBzaGlwLnggKyBzaGlwLmZvcndhcmQueDtcclxuICAgIHNoaXAueSA9IHNoaXAueSAtIHNoaXAuZm9yd2FyZC55O1xyXG4gIH0gZWxzZSB7XHJcbiAgICBzaGlwLmV4cGxvYWRpbmdUaW1lLS07XHJcbiAgICBpZiAoc2hpcC5leHBsb2FkaW5nVGltZSA9PT0gMCkge1xyXG4gICAgICBsaXZlcy0tO1xyXG4gICAgICBpZiAobGl2ZXMgPT09IDApIHtcclxuICAgICAgICBnYW1lT3ZlcigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNoaXAgPSBuZXdTaGlwKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEVkZ2Ugb2Ygc2NyZWVuXHJcbiAgaWYgKHNoaXAueCA8IDAgLSBzaGlwLnIpIHtcclxuICAgIHNoaXAueCA9IGNhbnZhcy53aWR0aCArIHNoaXAucjtcclxuICB9IGVsc2UgaWYgKHNoaXAueCA+IGNhbnZhcy53aWR0aCArIHNoaXAucikge1xyXG4gICAgc2hpcC54ID0gMCAtIHNoaXAucjtcclxuICB9XHJcbiAgaWYgKHNoaXAueSA8IDAgLSBzaGlwLnIpIHtcclxuICAgIHNoaXAueSA9IGNhbnZhcy5oZWlnaHQgKyBzaGlwLnI7XHJcbiAgfSBlbHNlIGlmIChzaGlwLnkgPiBjYW52YXMuaGVpZ2h0ICsgc2hpcC5yKSB7XHJcbiAgICBzaGlwLnkgPSAwIC0gc2hpcC5yO1xyXG4gIH1cclxuXHJcbiAgLy8gTW92ZSB0aGUgYXN0ZXJvaWRzXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhc3Rlcm9pZHMubGVuZ3RoOyBpKyspIHtcclxuICAgIGFzdGVyb2lkc1tpXS54ID0gYXN0ZXJvaWRzW2ldLnggKyBhc3Rlcm9pZHNbaV0ueHYgLyAyO1xyXG4gICAgYXN0ZXJvaWRzW2ldLnkgPSBhc3Rlcm9pZHNbaV0ueSArIGFzdGVyb2lkc1tpXS55diAqIDI7XHJcblxyXG4gICAgLy8gRWRnZSBvZiBzY3JlZW4gYXN0ZXJvaWRzXHJcbiAgICBpZiAoYXN0ZXJvaWRzW2ldLnggPCAwIC0gYXN0ZXJvaWRzW2ldLnIpIHtcclxuICAgICAgYXN0ZXJvaWRzW2ldLnggPSBjYW52YXMud2lkdGggKyBhc3Rlcm9pZHNbaV0ucjtcclxuICAgIH0gZWxzZSBpZiAoYXN0ZXJvaWRzW2ldLnggPiBjYW52YXMud2lkdGggKyBhc3Rlcm9pZHNbaV0ucikge1xyXG4gICAgICBhc3Rlcm9pZHNbaV0ueCA9IDAgLSBhc3Rlcm9pZHNbaV0ucjtcclxuICAgIH1cclxuICAgIGlmIChhc3Rlcm9pZHNbaV0ueSA8IDAgLSBhc3Rlcm9pZHNbaV0ucikge1xyXG4gICAgICBhc3Rlcm9pZHNbaV0ueSA9IGNhbnZhcy5oZWlnaHQgKyBhc3Rlcm9pZHNbaV0ucjtcclxuICAgIH0gZWxzZSBpZiAoYXN0ZXJvaWRzW2ldLnkgPiBjYW52YXMuaGVpZ2h0ICsgYXN0ZXJvaWRzW2ldLnIpIHtcclxuICAgICAgYXN0ZXJvaWRzW2ldLnkgPSAwIC0gYXN0ZXJvaWRzW2ldLnI7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBmdW5jdGlvbiBoYW5kbGVLZXkoZXZlbnQpIHtcclxuLy8gICBjb25zb2xlLmxvZyhldmVudC5rZXlDb2RlKTtcclxuLy8gfVxyXG4vLyB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5KTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')}]);